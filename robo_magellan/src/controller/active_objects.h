//$file${.::active_objects.h} ################################################
//
// Model: imu.qm
// File:  ${.::active_objects.h}
//
// This code has been generated by QM tool (https://state-machine.com/qm).
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//$endhead${.::active_objects.h} #############################################
#pragma once

#include "controller/TelemetryServiceImpl.h"
#include "controller/Attitude.h"
#include "util/CircularBuffer.h"

using namespace QP;

enum Signals {
    DUMMY_SIG = Q_USER_SIG,
    MAX_PUB_SIG,  // the last published signal
    IMU_STARTED_SIG,
    TIMEOUT_SIG,
    DIFFERENTIAL_CONTROL_SIG,
    SWITCH_TO_AUTO_SIG,
    SWITCH_TO_REMOTE_SIG,
    MAX_SIG       // the last signal
};

extern QActive * const AO_Blinky; // opaque pointer
extern QActive * const AO_AHRS; // opaque pointer
extern QActive * const AO_GPS; // opaque pointer
extern QActive * const AO_DSM; // opaque pointer
extern QActive * const AO_TServer; // opaque pointer

//$declare${AOs::DifferentialControlEvt} #####################################
//${AOs::DifferentialControlEvt} .............................................
class DifferentialControlEvt : public QP::QEvt {
public:
    double left_speed;
    double right_speed;

public:
    DifferentialControlEvt(
        QSignal sig,
        double & r_left_speed,
        double& r_right_speed);
};
//$enddecl${AOs::DifferentialControlEvt} #####################################
